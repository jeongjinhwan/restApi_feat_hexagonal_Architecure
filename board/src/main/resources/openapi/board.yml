openapi: "3.0.2"
info:
  title: Sample Board API
  version: 1.0
tags:
  - name: board sample

paths:
  /v1/board/updateBoard:
    post:
      tags:
        - board-controller
      summary: "API-ID: API_SAMPLE_0004 게시글 수정"
      description: 게시글 수정 API
      operationId: updateBoard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BoardDTO"
        required: true
      responses:
        "200":
          description: 게시글 수정 성공
          content:
            application/json:
              schema:
                type: object
        "400":
          description: 값을 잘못 입력할 경우 에러를 반환합니다.
          content:
            application/json:
              schema:
                type: object
        "409":
          description: 이미 유저 계정이 동일한 게 존재할 경우 에러를 반환합니다.
          content:
            application/json:
              schema:
                type: object
  /v1/board/deleteBoard:
    post:
      tags:
        - board-controller
      summary: "API-ID: API_SAMPLE_0005 게시글 삭제"
      description: 게시글 삭제 API
      operationId: deleteBoard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BoardDTO"
        required: true
      responses:
        "200":
          description: 게시글 삭제 성공
          content:
            application/json:
              schema:
                type: object
  /v1/board/createBoard:
    post:
      tags:
        - board-controller
      summary: "API-ID: API_SAMPLE_0003 게시글 등록"
      description: 게시글 등록 API
      operationId: createBoard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BoardDTO"
        required: true
      responses:
        "200":
          description: 게시글 등록 성공
          content:
            application/json:
              schema:
                type: object
  /v1/board/list:
    get:
      tags:
        - board-controller
      summary: "API-ID: API_SAMPLE_0001 리스트 조회"
      description: 리스트 조회 API
      operationId: selectBoard
      responses:
        "200":
          description: 리스트 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BoardDTO"
  /v1/board/detail:
    get:
      tags:
        - board-controller
      summary: "API-ID: API_SAMPLE_0002 상세내용 조회"
      description: 상세내용 조회 API
      operationId: getDetail
      parameters:
        - name: boardNo
          in: query
          description: 게시글 번호
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        "200":
          description: 상세내용 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardDTO"
  /v1/board/hello:
    get:
      tags:
        - board-controller
      operationId: getHello_1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /v1/board/createBoardDDL:
    get:
      tags:
        - board-controller
      summary: "API-ID: API_SAMPLE_0006 테이블 생성"
      description: 테이블 생성 API
      operationId: createBoardDDL
      responses:
        "200":
          description: 테이블 생성 성공
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    BoardDTO:
      required:
        - contents
        - subject
        - writer
      type: object
      properties:
        boardNo:
          type: integer
          description: 게시글 번호
          format: int32
          example: 1,2,3...
        subject:
          type: string
          description: 제목
          example: 제에에에에모모모목목
        contents:
          type: string
          description: 내용
        writer:
          type: string
          description: 작성자
      description: 게시판
